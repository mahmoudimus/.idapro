# generated by mutilz cli at 2025-02-18 12:51:09
import dataclasses
import functools

import ida_funcs
import idaapi
import idc
import mutilz.actions as actions
import mutilz.helpers.ida as ida_helpers
from mutilz.actions.force_analyze import ForceAnalyzeActionHandler


@dataclasses.dataclass
class RedecompilefunctionActionHandler(ida_helpers.BaseActionHandler):
    """Re-decompile Function"""

    action_name: str = "mutilz:re_decompile_function"
    action_label: str = "Re-decompile Function"
    icon: int = 156

    def activate(self, ctx):
        ea = idaapi.get_screen_ea()
        func = ida_funcs.get_func(ea)
        start_ea = func.start_ea if func else ea

        try:
            ForceAnalyzeActionHandler.decompile_function(start_ea)
        finally:
            idc.jumpto(ea)
        return 1

    def update(self, ctx):
        return (
            idaapi.AST_ENABLE_FOR_WIDGET
            if ctx.widget_type == idaapi.BWN_DISASM
            else idaapi.AST_DISABLE_FOR_WIDGET
        )


class RedecompilefunctionAction(
    actions.action_t, metaclass=ida_helpers.HookedActionMeta
):
    uihook_class = functools.partial(
        ida_helpers.PopUpHook,
        RedecompilefunctionActionHandler,
        ida_helpers.is_disassembly_widget,
    )


# retrieve the action
def get_action() -> actions.action_t:
    return RedecompilefunctionAction()
